// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	entity "go-clean-api/entity"

	mock "github.com/stretchr/testify/mock"
)

// AuthUCaseInterface is an autogenerated mock type for the AuthUCaseInterface type
type AuthUCaseInterface struct {
	mock.Mock
}

// Login provides a mock function with given fields: login, bearer
func (_m *AuthUCaseInterface) Login(login *entity.Login, bearer *string) error {
	ret := _m.Called(login, bearer)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entity.Login, *string) error); ok {
		r0 = rf(login, bearer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewAuthUCaseInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewAuthUCaseInterface creates a new instance of AuthUCaseInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuthUCaseInterface(t mockConstructorTestingTNewAuthUCaseInterface) *AuthUCaseInterface {
	mock := &AuthUCaseInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
