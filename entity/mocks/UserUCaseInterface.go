// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"
	entity "go-clean-api/entity"

	mock "github.com/stretchr/testify/mock"
)

// UserUCaseInterface is an autogenerated mock type for the UserUCaseInterface type
type UserUCaseInterface struct {
	mock.Mock
}

// Index provides a mock function with given fields: ctx
func (_m *UserUCaseInterface) Index(ctx context.Context) {
	_m.Called(ctx)
}

// InsertUser provides a mock function with given fields: ctx, user
func (_m *UserUCaseInterface) InsertUser(ctx context.Context, user *entity.User) error {
	ret := _m.Called(ctx, user)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entity.User) error); ok {
		r0 = rf(ctx, user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUserUCaseInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserUCaseInterface creates a new instance of UserUCaseInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserUCaseInterface(t mockConstructorTestingTNewUserUCaseInterface) *UserUCaseInterface {
	mock := &UserUCaseInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
